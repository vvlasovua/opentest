<?php

namespace App\Http\Controllers\Admin;

use App\DataTables\PositionDataTable;
use App\Http\Controllers\Controller;
use App\Models\Position;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;

class PositionController extends Controller
{
    //
    public function index(PositionDataTable $dataTable){
        return $dataTable->render('vendor.adminlte.position');
    }

    public function add_position(){
        if (view()->exists('vendor.adminlte.position.add')) {
            return view('vendor.adminlte.position.add');
        }
        abort(404);
    }

    public function save_position(Request $request){
        $this->validate($request, [ 'name' => 'required|string|min:5|max:255' ] );

        $user = Auth::user();
        $position = new Position();
        $position->admin_created_id = $user->id;
        $position->admin_updated_id = $user->id;
        $position->name = $request->name;

        if ($position->save()) {
            return redirect()->route('admin.position');
        }else{
            return back()->withErrors(['Ошибка сохранения данных!'])->withInput($request->all());
        }
    }

    public function get_position_by_id($id){

        $position = Position::find($id);
        $result = array('position' => $position);

        if (view()->exists('vendor.adminlte.position.edit')) {
            return view('vendor.adminlte.position.edit', $result);
        }
        abort(404);
    }

    public function update_position_by_id(Request $request){
        $this->validate($request, [ 'name' => 'required|string|min:5|max:255' ] );

        $position = Position::find($request->id);
        $user = Auth::user();

        $position->admin_updated_id = $user->id;
        $position->name = $request->name;

        if ($position->save()) {
            return redirect()->route('admin.position');
        }else{
            return back()->withErrors(['Ошибка сохранения данных!'])->withInput($request->all());
        }
    }

    public function delete_position(Request $request){
        $position = Position::find($request->id);
        if ($position->delete()) {
            return response()->json(['code' => 200, 'mess' => 'Poof! Your imaginary position has been deleted!']);
            //return redirect()->route('admin.position');
        }
    }
}
